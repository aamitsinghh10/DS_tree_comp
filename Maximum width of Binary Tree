class Solution {
public:
    int widthOfBinaryTree(TreeNode* root)
    {
       if(root==nullptr)
           return 0;
        int ans=0;
        queue<pair<TreeNode *,int>> q;
        q.push({root,0});
        
        while(q.empty()==false)
        {
            int count=q.size();
            int min=q.front().second;
            int first,last;
            
            for(int i=0;i<count;i++)
            {
                int curr_id=q.front().second-min;
                TreeNode *curr=q.front().first;
                q.pop();
                if(i==0)
                    first=curr_id;
                if(i==count-1)
                    last=curr_id;
                
                if(curr->left)
                    q.push({curr->left,curr_id*2+1});
                
                if(curr->right)
                    q.push({curr->right,curr_id*2+2});
            }
            ans=max(ans,last-first+1);
        }
        return ans;
    }
};
