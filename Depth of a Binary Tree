DFS
Time Complexity: O (n)
Space Complexity: O (h)

int maxDepth(TreeNode* root) 
{
		if (root==NULL) return 0; 
		return max(maxDepth(root->left)+1, maxDepth(root->right)+1);
}



BFS
Time Complexity: O (n)
Space Complexity: O (n)

    int maxDepth(TreeNode* root) {
        if (root==NULL) return 0; 
        queue<TreeNode*> q;
        q.push(root);
        int depth=0;
        
        while (!q.empty()) {
            ++depth;
            int s=q.size();
            for (int i=0; i<s; i++) {
                TreeNode* front=q.front();
                q.pop();
                
                if (front->left) q.push(front->left);
                if (front->right) q.push(front->right);
            }
        }
    return depth;
    }
