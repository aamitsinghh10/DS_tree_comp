/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode *root,vector<int> &path,vector<vector<int>> &res,int targetSum)
    {
        if(root==NULL)
            return;
        
        path.push_back(root->val);
        
        if(root->left==NULL && root->right==NULL && root->val==targetSum)
        {
            res.push_back(path);
            path.pop_back();
            return;
        }
        solve(root->left,path,res,targetSum-root->val);
        solve(root->right,path,res,targetSum-root->val);
        path.pop_back();
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) 
    {
        vector<vector<int>> res;
        vector<int> path;
        
        solve(root,path,res,targetSum);
        return res;
    }
};
